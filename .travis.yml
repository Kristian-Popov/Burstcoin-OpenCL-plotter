language: cpp
# TODO add support for clang and Mac OS X
compiler: gcc
dist: trusty
sudo: required
env:
  global:
    # Ubuntu version
    - LINUX_DIST=trusty
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    # TODO add -Werror?
    - CXX_FLAGS="-Wall -pedantic"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

script:
    ############################################################################
    # Build main and tests
    ############################################################################
     - mkdir -p build
     - cd build
     - cmake ${CMAKE_OPTIONS} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DBOOST_ROOT="../boost_1_65_1" ..
     - make
     - cd ..

matrix:
  include:
    # g++ 5 comes with Ubuntu 16.04 LTS (Xenial Xerus)
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # Newest release
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

before_install:
    - eval "${MATRIX_EVAL}"
    # Combine global build options with OS/compiler-dependent options
    - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
    - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}
install:
    # Remove standard CMake. Currently it is not installed as a package, so not really necessary
    - sudo apt-get purge -y cmake
    # Download and install CMake
    # Also useful stuff here https://stackoverflow.com/q/47222115
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.tar.gz";
        mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake;
        export PATH=${TRAVIS_BUILD_DIR}/cmake/bin:${PATH};
      else
        brew outdated cmake || brew upgrade cmake;
      fi
    # Print CMake version, just in case
    - cmake --version
    # Download and build Boost
    - wget -O boost_1_65_1.tar.gz https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz
    - tar xzf boost_1_65_1.tar.gz
    - cd boost_1_65_1/
    - ./bootstrap.sh --with-libraries=program_options,filesystem,system,log
    - ./b2 -d0 link=static threading=multi address-model=64
    - cd ..
